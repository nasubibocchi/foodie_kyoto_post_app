// Mocks generated by Mockito 5.2.0 from annotations
// in foodie_kyoto_post_app/test/string_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:foodie_kyoto_post_app/data/model/result.dart' as _i2;
import 'package:foodie_kyoto_post_app/data/remote/data_source_impl/storage_data_source_impl/string_storage.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeResult_0<T> extends _i1.Fake implements _i2.Result<T> {}

/// A class which mocks [StringStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockStringStorage extends _i1.Mock implements _i3.StringStorage {
  MockStringStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<String?>> postImages({String? path, String? shopId}) =>
      (super.noSuchMethod(
          Invocation.method(#postImages, [], {#path: path, #shopId: shopId}),
          returnValue: Future<_i2.Result<String?>>.value(
              _FakeResult_0<String?>())) as _i4.Future<_i2.Result<String?>>);
  @override
  _i4.Future<_i2.Result<String?>> getImagesUrl(
          {String? path, String? shopId}) =>
      (super.noSuchMethod(
          Invocation.method(#getImagesUrl, [], {#path: path, #shopId: shopId}),
          returnValue: Future<_i2.Result<String?>>.value(
              _FakeResult_0<String?>())) as _i4.Future<_i2.Result<String?>>);
}
